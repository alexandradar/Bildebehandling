import cv2
import numpy as np

# Load the table image
image_path = '/Users/Ellaberg/Desktop/Tabell_svar.png'
image = cv2.imread(image_path)

# Preprocess the image (you can adjust these steps based on your image)
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
blurred = cv2.GaussianBlur(gray, (5, 5), 0)
edges = cv2.Canny(blurred, 50, 150)

# Find horizontal lines using the Hough Line Transform
lines = cv2.HoughLinesP(edges, 1, np.pi / 180, threshold=100, minLineLength=100, maxLineGap=10)

# Sort the lines based on their y-coordinates
lines = sorted(lines, key=lambda line: line[0][1])

# Initialize a variable to keep track of the current line
current_line = 0

# Create an array to store the cropped row images
row_images = []

# Loop through the lines and extract the regions between lines as rows
for i in range(1, len(lines)):
    y1 = lines[i - 1][0][1]
    y2 = lines[i][0][1]

    # Make sure the row is of a certain height (adjust this threshold as needed)
    if y2 - y1 > 10:
        row_image = image[y1:y2, :]
        row_images.append(row_image)
        current_line += 1

# Display the row images
for i, row_image in enumerate(row_images):
    cv2.imshow(f'Row {i + 1}', row_image)
    cv2.waitKey(0)

cv2.destroyAllWindows()
